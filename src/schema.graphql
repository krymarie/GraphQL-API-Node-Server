scalar DateTime

type Query {
  info: String!
  feed: [Link!]!
}

type Mutation {
  post(url: String!, description: String!): Link!
}

type Link {
  id: ID!
  description: String!
  url: String!
}

type Client {
  id: String!
  name: String!
  address: String!
  phone: String!
  interestLevel: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input NewClient {
  id: String!
  name: String!
  address: String!
  phone: String!
  interestLevel: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UpdateClient {
  id: String
  name: String
  address: String
  phone: String
  interestLevel: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input UniqueID {
  id: String
}

type Query {
  Address(address: String): [Client!]!
  Client(id: ID): Client
  Clients(searchString: String): [Client!]!
}

type Mutation {
  AddClient(data: NewClient!): Client!
  NewClient(data: NewClient!, where: UniqueID!): Client
  ClientUpdate(data: UniqueID!, where: UniqueID!): Client
}
